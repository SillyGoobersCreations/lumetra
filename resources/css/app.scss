html, body {
    min-height: 100dvh;
}
#app {
    min-height: 100dvh;
}

body {
    background: rgb(var(--color-base-200));
    color: rgb(var(--color-base-900));

    & #app {
        display: flex;
        flex-direction: column;
    }
}

/* DARK/LIGHT MODE UTILITY */
:root {
    .only-dark {
        display: none;
    }
}
:root[dark] {
    .only-light {
        display: none;
    }
}

/* INPUTS */
button, input[type="submit"], input[type="button"], .button {
    background: rgb(var(--color-base-200));
    border: 0;
    font-family: var(--font-family);
    color: rgb(var(--color-base-900));
    font-weight: 600;
    font-size: var(--font-size);
    height: 40px;
    padding: 0 10px;
    border-radius: 5px;
    transition: var(--transition-default);
    text-decoration: none;
    display: flex;
    gap: 8px;
    align-items: center;

    &:has(*[class^="ri-"]) {
        & span {
            margin-right: 2px;
        }
    }

    & *[class^="ri-"] {
        font-size: 20px;
        font-weight: 400;
    }

    &:not(:disabled):not(.disabled):hover {
        background: rgb(var(--color-base-300));
        cursor: pointer;
    }
    &:not(:disabled):not(.disabled):active {
        background: rgb(var(--color-base-400));
        cursor: pointer;
    }

    &.transparent {
        background: transparent;

        &:not(:disabled):not(.disabled):hover {
            background: rgb(var(--color-base-200));
        }
        &:not(:disabled):not(.disabled):active {
            background: rgb(var(--color-base-300));
        }
    }
    &.outline {
        background: transparent;
        border: 2px solid rgb(var(--color-base-200));

        &:not(:disabled):not(.disabled):hover {
            border-color: rgb(var(--color-base-300));
            background: transparent;
        }
        &:not(:disabled):not(.disabled):active {
            border-color: rgb(var(--color-base-400));
        }
    }
    &.primary {
        background: rgb(var(--color-primary-600));
        color: rgb(var(--color-primary-50));

        &:not(:disabled):not(.disabled):hover {
            background: rgb(var(--color-primary-800));
            cursor: pointer;
        }
        &:not(:disabled):not(.disabled):active {
            background: rgb(var(--color-primary-950));
            cursor: pointer;
        }
    }
    &.danger {
        background: rgb(var(--color-danger-600));
        color: rgb(var(--color-danger-50));

        &:not(:disabled):not(.disabled):hover {
            background: rgb(var(--color-danger-800));
            cursor: pointer;
        }
        &:not(:disabled):not(.disabled):active {
            background: rgb(var(--color-danger-950));
            cursor: pointer;
        }
    }
    &.reverse {
        background: rgb(var(--color-base-50));
        color: rgb(var(--color-base-900));

        &:not(:disabled):not(.disabled):hover {
            background: rgb(var(--color-base-100));
            cursor: pointer;
        }
        &:not(:disabled):not(.disabled):active {
            background: rgb(var(--color-base-200));
            cursor: pointer;
        }
    }

    &:disabled, &.disabled {
        opacity: 0.4;
        cursor: not-allowed !important;
    }
}
input:not([type="submit"]):not([type="button"]):not([type="checkbox"]):not([type="radio"]):not([type="hidden"]):not([type="range"]), textarea {
    background: rgb(var(--color-base-50));
    border: 2px solid rgb(var(--color-base-300));
    font-family: var(--font-family);
    color: rgb(var(--color-base-900));
    font-size: 1rem;
    height: 40px;
    padding: 0 12px;
    border-radius: 5px;
    transition: var(--transition-default);

    &:hover {
        border-color: rgb(var(--color-primary-600));
        cursor: text;
    }
    &:focus {
        border-color: rgb(var(--color-primary-600));
    }
}
textarea {
    height: auto;
    padding: 12px;
}
.select {
    position: relative;
    height: 40px;
    background: rgb(var(--color-base-50));
    border-radius: 5px;
    transition: var(--transition-default);
    display: flex;
    align-items: center;
    cursor: pointer;

    & select {
        font-family: var(--font-family);
        font-size: 1rem;
        appearance: none;
        border: 0;
        background: 0;
        width: max-content;
        height: 100%;
        padding: 0 30px 0 15px;
        cursor: pointer;
    }
    &::after {
        content: "\ea4e";
        pointer-events: none;
        font-family: 'remixicon' !important;
        font-style: normal;
        -webkit-font-smoothing: antialiased;
        font-size: 22px;
        position: absolute;
        right: 5px;
    }

    &:hover {
        background: rgb(var(--color-base-100));
        cursor: pointer;
    }
}
input[type="checkbox"].toggle {
    appearance: none;
    width: 50px;
    height: 25px;
    background: rgb(var(--color-base-200));
    display: block;
    border-radius: 50px;
    position: relative;
    cursor: pointer;
    transition: var(--transition-default);

    &:before {
        content: "";
        width: 16px;
        height: 16px;
        background: rgb(var(--color-base-400));
        position: absolute;
        left: 5px;
        top: 5px;
        border-radius: 100px;
        transition: var(--transition-default);
    }

    &:hover {
        background: rgb(var(--color-base-300));
        &:before {
            background: rgb(var(--color-base-500));
        }
    }

    &:checked {
        background: rgb(var(--color-primary-600));

        &:hover {
            background: rgb(var(--color-primary-800));
        }
        &:before {
            left: 29px;
            background: rgb(var(--color-primary-50));
        }
    }
}

a {
    text-decoration: none;
}

/* FOCUS RING */
* {
    outline: 0;
}

.list-move,
.list-enter-active,
.list-leave-active {
    transition: var(--transition-default);
}
.list-enter-from,
.list-leave-to {
    opacity: 0;
    transform: translateY(15px);
}
.list-leave-active {
    position: absolute;
    z-index: -1;
}
